## Product Inventory Configuration
kineteco.service=Product Inventory
kineteco.greeting-message=Product Inventory Service is up!
kineteco.min-units=5

## Quarkus core
quarkus.application.name=Product Inventory
quarkus.banner.enabled=true
quarkus.native.resources.includes=KinetEco_product_inventory.csv,import.sql
%dev.quarkus.log.category."com.kineteco".level = DEBUG
%test.quarkus.log.category."com.kineteco".level = DEBUG

## Kubernetes extension
quarkus.container-image.group=com.kineteco
quarkus.container-image.name=product-inventory-service
quarkus.kubernetes.name=product-inventory-service

# Kubernetes config maps
%prod.quarkus.kubernetes-config.enabled=true
%prod.quarkus.kubernetes-config.secrets.enabled=true
%prod.quarkus.kubernetes-config.secrets=kineteco-credentials

#Data source
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=${username}
%prod.quarkus.datasource.password=${password}
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgres.default:5432/kineteco

## Panache
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.sql-load-script=import.sql
